name: CI

on:
  pull_request:
    branches:
      - main

permissions: read-all

concurrency:
  group: ci-main-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  version:
    name: 0 - Version Check
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    timeout-minutes: 5
    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: head
          fetch-depth: 0

      - name: Checkout base (main)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
          fetch-depth: 0

      - name: Detect version bump
        id: detect
        run: |
          set -euo pipefail
          head_ver=$(jq -r '.version' head/package.json)
          base_ver=$(jq -r '.version' base/package.json)
          echo "head=$head_ver base=$base_ver"
          if [ "$head_ver" != "$base_ver" ]; then
            echo "bumped=true" >> $GITHUB_OUTPUT
          else
            echo "bumped=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment guidance when missing
        if: steps.detect.outputs.bumped == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner, repo = context.repo.repo, issue_number = context.issue.number;
            const { data: comments } = await github.rest.issues.listComments({ owner, repo, issue_number });
            const marker = "Version bump required. Use `/version`";
            const exists = comments.find(c =>
              c.user?.type === "Bot" && c.body?.includes(marker)
            );
            const body =
              `> **Version bump required. Use \`/version\`**  \n\n` +
              `This PR does not change \`package.json\` **version**.\n\n` +
              `Comment one of the following on this PR to bump automatically:\n` +
              `- \`/version patch\`\n- \`/version minor\`\n- \`/version major\`\n\n` +
              `_Tip:_ The \`/version\` bot updates the PR branch and re-triggers CI.`;
            if (!exists) {
              await github.rest.issues.createComment({ owner, repo, issue_number, body });
            }

      - name: Fail if not bumped (blocks other checks)
        if: steps.detect.outputs.bumped == 'false'
        run: |
          echo "Version not bumped. See guidance comment above."
          exit 1

      - name: OK - version bumped
        if: steps.detect.outputs.bumped == 'true'
        run: echo "Version bump detected; proceed with downstream jobs."

  test:
    name: 1 - Test & Build
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: version
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm tsc --noEmit
      - run: pnpm coverage
      - run: pnpm build
      - uses: peaceiris/actions-gh-pages@v4
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./__local__/coverage
          destination_dir: reports/${{ github.sha }}/coverage
      - uses: peaceiris/actions-gh-pages@v4
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./__local__/bundle
          destination_dir: reports/${{ github.sha }}/bundle

  comment:
    name: 2 - Report Links Comment
    timeout-minutes: 1
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'pull_request' || !github.event.pull_request.head.repo.fork }}
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const sha = context.sha.slice(0,7)
            const baseUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/reports/${context.sha}`
            const coverageUrl = `${baseUrl}/coverage/index.html`
            const bundleUrl = `${baseUrl}/bundle/sonda_0.html`

            const body = `
            📝 **Reports for commit \`${sha}\`**

            - [Coverage Report](${coverageUrl})
            - [Bundle Analysis](${bundleUrl})
            `

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })

            const existing = comments.find(c => c.user.type === "Bot" && c.body.includes("Reports for commit"))
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body
              })
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              })
            }
