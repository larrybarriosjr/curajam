name: CI

on:
  push:
    branches:
      - main

permissions: read-all

concurrency:
  group: ci-main-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: 1 - Test & Build
    timeout-minutes: 20
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm tsc --noEmit
      - run: pnpm coverage
      - run: pnpm build
      - uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./__local__/coverage
          destination_dir: reports/stable/coverage
      - uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./__local__/bundle
          destination_dir: reports/stable/bundle

  comment:
    name: 2 - Report Links Comment
    timeout-minutes: 1
    runs-on: ubuntu-latest
    needs: test
    permissions:
      issues: write
      pull-requests: write
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const baseUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/reports/stable`
            const coverageUrl = `${baseUrl}/coverage/index.html`
            const bundleUrl = `${baseUrl}/bundle/sonda_0.html`

            const body = `
            📝 **Reports for commit \`latest-stable\`**

            - [Coverage Report](${coverageUrl})
            - [Bundle Analysis](${bundleUrl})
            `

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })

            const existing = comments.find(c => c.user.type === "Bot" && c.body.includes("Reports for commit"))
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body
              })
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              })
            }
